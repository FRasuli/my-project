name: CI

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: npm install 
      - name: Upload build artifact
        uses: actions/upload-artifact@v3
        with:
          name: dist
          path: dist/
        
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14.x]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: npm install package.json

      - name: Mv
        run: mv package.json /home/runner/work/my-project/my-project/

      - name: Run test
        run: npm run test
        
      - name: Upload coverage reports
        uses: actions/upload-artifact@v3
        with:
          name: coverage
          path: coverage/

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    #needs: build
    #strategy:
     # matrix:
        #node-version: [14.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'

      - name: Cache node modules
        id: cache-npm
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Install package dependencies
        run: npm install

      - name: Deploy the app
        # This assumes that there is deploy script, change as required
        run: npm run deploy
        # Environment secrets, generally stored in Github Secrets (un-comment as required)
        # env:
          # deployment_token: ${{ secrets.ACTIONS_DEPLOYMENT_TOKEN }}
